{"ast":null,"code":"import _toConsumableArray from\"/home/hitesh/work/snake-and-ladder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/hitesh/work/snake-and-ladder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/hitesh/work/snake-and-ladder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"/home/hitesh/work/snake-and-ladder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React from'react';import DiceGif from'../../../assets/dice.gif';import'./game.scss';import{useState}from'react';var Game=function Game(props){var GAMEROW=10,GAMECOL=10;//Utills\nvar getPlaceholder=function getPlaceholder(row,col){return row*10+(row%2===0?col+1:GAMECOL-col);};var getPos=function getPos(num){if(!num){return'00';}var row=Math.floor(num/10);var col=row%2===0?num%10:GAMECOL-num%10-1;return row+''+col;};var getDiceValue=function getDiceValue(){var max=arguments.length>0&&arguments[0]!==undefined?arguments[0]:7;var value=Math.floor(Math.random()*Math.floor(max));if(!value){return getDiceValue();}else{return value;}};var initialGame=[];var ladders={'16':33,'22':56,'59':88,'51':80};var snakes={'39':27,'40':19,'64':47,'94':72};for(var i=GAMEROW-1;i>=0;i--){initialGame[i]=[];for(var j=0;j<GAMECOL;j++){initialGame[i][j]=getPlaceholder(i,j);}}var playerInitPos={};var initPlayers=[{name:'Player 1',pos:''},{name:'Player 2',pos:''}];var _useState=useState(playerInitPos),_useState2=_slicedToArray(_useState,2),playerPos=_useState2[0],setPlayerPos=_useState2[1];var _useState3=useState(initPlayers),_useState4=_slicedToArray(_useState3,2),players=_useState4[0],setPlayers=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),activePlayer=_useState6[0],setActivePlayer=_useState6[1];//Dice states\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isRolling=_useState8[0],setIsRolling=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),diceVal=_useState10[0],setDiceVal=_useState10[1];//Init games\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),startGame=_useState12[0],setStartGame=_useState12[1];var onDiceClick=function onDiceClick(){setIsRolling(true);setTimeout(function(){var isTogglePlayer=true;setIsRolling(false);var diceVal=getDiceValue();setDiceVal(diceVal);var newPlayerPos=_objectSpread({},playerPos);var newPlayers=_toConsumableArray(players);var activePlayerObj=newPlayers[activePlayer];var oldPos=activePlayerObj.pos;var newPos=getPos((activePlayerObj.pos?Number(getPos(activePlayerObj.pos)):-1)+diceVal);// let newPos = getPos(Number(getPos(activePlayerObj.pos ? Number(activePlayerObj.pos) : 0)) + diceVal);\nif(Number(newPos)>=100){togglePlayer();return;}else if(Number(newPos)==90){alert('Winner is '+activePlayerObj.name);window.location.reload();}if(newPlayerPos[newPos]){var elimPlayerName=newPlayerPos[newPos][0];newPlayers[getPlayerIndex(elimPlayerName)].pos='';isTogglePlayer=false;}if(ladders[newPos]){newPos=getPos(ladders[newPos]);}else if(snakes[newPos]){newPos=getPos(snakes[newPos]);}newPlayerPos[newPos]=[activePlayerObj.name];if(oldPos){delete newPlayerPos[oldPos];}if(diceVal==6){isTogglePlayer=false;}activePlayerObj.pos=newPos;isTogglePlayer&&togglePlayer();setPlayerPos(newPlayerPos);setPlayers(newPlayers);},300);};var togglePlayer=function togglePlayer(){var numberOfPlayers=players.length;if(numberOfPlayers==1){return;}if(activePlayer==numberOfPlayers-1){setActivePlayer(0);}else{setActivePlayer((_readOnlyError(\"activePlayer\"),++activePlayer));}};var getPlayerIndex=function getPlayerIndex(name){for(var _i=0;_i<players.length;_i++){if(players[_i].name==name){return _i;}}};var selectPlayerAndStart=function selectPlayerAndStart(e){var numOfPlayers=e.target.value;var newPlayers=[];for(var _i2=1;_i2<=numOfPlayers;_i2++){var playerInfo={name:'Player '+_i2,pos:''};newPlayers.push(playerInfo);}setPlayers(newPlayers);setStartGame(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"game-container\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"heading\"},\"Snakes & Ladders\"),/*#__PURE__*/React.createElement(\"h4\",{className:\"heading\"},\"Active Player: \",/*#__PURE__*/React.createElement(\"span\",{className:\"player player-\".concat(activePlayer)},players[activePlayer].name)),/*#__PURE__*/React.createElement(\"div\",{className:\"start-positions\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"player-heading\"},\"Players:\"),players.map(function(cur,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"each-player\"},/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},cur.name),/*#__PURE__*/React.createElement(\"div\",{className:\"player-circle player-\".concat(index)}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"board\"},initialGame.map(function(row,rowIndex){return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},row.map(function(col,colIndex){return/*#__PURE__*/React.createElement(\"div\",{className:\"col \".concat(initialGame[rowIndex][colIndex]%2==0?'even':'odd')},/*#__PURE__*/React.createElement(\"div\",{className:\"board-place\"},initialGame[rowIndex][colIndex]),Object.keys(playerPos).map(function(cur){if(cur==rowIndex+''+colIndex){return/*#__PURE__*/React.createElement(React.Fragment,null,playerPos[cur].map(function(eachPlayer,playerIndex){return/*#__PURE__*/React.createElement(\"div\",{className:\"player player-\".concat(getPlayerIndex(eachPlayer))});}));}}));}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"dice-holder\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dice\",onClick:onDiceClick},isRolling?/*#__PURE__*/React.createElement(\"img\",{src:DiceGif,className:\"dice-gif\"}):/*#__PURE__*/React.createElement(\"div\",{className:\"dice-value\"},diceVal)))),!startGame?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"select-players\"},/*#__PURE__*/React.createElement(\"p\",null,\"How Many Players?\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"1\",name:\"players\",value:\"1\",onClick:selectPlayerAndStart}),/*#__PURE__*/React.createElement(\"label\",{for:\"male\"},\"1\"),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"2\",name:\"players\",value:\"2\",onClick:selectPlayerAndStart}),/*#__PURE__*/React.createElement(\"label\",{for:\"female\"},\"2\"),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"3\",name:\"players\",value:\"3\",onClick:selectPlayerAndStart}),/*#__PURE__*/React.createElement(\"label\",{for:\"other\"},\"3\"),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",id:\"4\",name:\"players\",value:\"4\",onClick:selectPlayerAndStart}),/*#__PURE__*/React.createElement(\"label\",{for:\"other\"},\"4\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"overlay\"})):null);};export default Game;","map":{"version":3,"sources":["/home/hitesh/work/snake-and-ladder/src/client/components/pages/Game/Game.jsx"],"names":["React","DiceGif","useState","Game","props","GAMEROW","GAMECOL","getPlaceholder","row","col","getPos","num","Math","floor","getDiceValue","max","value","random","initialGame","ladders","snakes","i","j","playerInitPos","initPlayers","name","pos","playerPos","setPlayerPos","players","setPlayers","activePlayer","setActivePlayer","isRolling","setIsRolling","diceVal","setDiceVal","startGame","setStartGame","onDiceClick","setTimeout","isTogglePlayer","newPlayerPos","newPlayers","activePlayerObj","oldPos","newPos","Number","togglePlayer","alert","window","location","reload","elimPlayerName","getPlayerIndex","numberOfPlayers","length","selectPlayerAndStart","e","numOfPlayers","target","playerInfo","push","map","cur","index","rowIndex","colIndex","Object","keys","eachPlayer","playerIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DiceGif from '../../../assets/dice.gif';\nimport './game.scss';\nimport { useState } from 'react';\n\nconst Game = (props) => {\n\n    const GAMEROW = 10, GAMECOL = 10;\n    //Utills\n    const getPlaceholder = (row, col) => {\n        return row * 10 + (row % 2 === 0 ? col + 1 : GAMECOL - col);\n    }\n    const getPos = (num) => {\n        if (!num) {\n            return '00';\n        }\n        let row = Math.floor(num / 10);\n        let col = (row % 2 === 0 ? num % 10 : GAMECOL - num % 10 - 1);\n        return row + '' + col;\n    }\n    const getDiceValue = (max = 7) => {\n        let value = Math.floor(Math.random() * Math.floor(max));\n        if (!value) {\n            return getDiceValue();\n        } else {\n            return value;\n        }\n    }\n\n    let initialGame = [];\n    let ladders = { '16': 33, '22': 56, '59': 88, '51': 80 };\n    let snakes = { '39': 27, '40': 19, '64': 47, '94': 72 };\n    for (let i = GAMEROW - 1; i >= 0; i--) {\n        initialGame[i] = [];\n        for (let j = 0; j < GAMECOL; j++) {\n            initialGame[i][j] = getPlaceholder(i, j);\n        }\n    }\n    let playerInitPos = {};\n    let initPlayers = [{ name: 'Player 1', pos: '' }, { name: 'Player 2', pos: '' }];\n    const [playerPos, setPlayerPos] = useState(playerInitPos);\n    const [players, setPlayers] = useState(initPlayers);\n    const [activePlayer, setActivePlayer] = useState(0);\n\n    //Dice states\n    const [isRolling, setIsRolling] = useState(false);\n    const [diceVal, setDiceVal] = useState(0);\n\n    //Init games\n    const [startGame, setStartGame] = useState(false);\n\n    const onDiceClick = () => {\n        setIsRolling(true);\n        setTimeout(() => {\n            let isTogglePlayer = true;\n            setIsRolling(false);\n            let diceVal = getDiceValue();\n            setDiceVal(diceVal);\n            let newPlayerPos = { ...playerPos };\n            let newPlayers = [...players];\n\n            let activePlayerObj = newPlayers[activePlayer];\n            let oldPos = activePlayerObj.pos;\n            let newPos = getPos((activePlayerObj.pos ? Number(getPos(activePlayerObj.pos)) : -1) + diceVal);\n            // let newPos = getPos(Number(getPos(activePlayerObj.pos ? Number(activePlayerObj.pos) : 0)) + diceVal);\n\n            if (Number(newPos) >= 100) {\n                togglePlayer();\n                return;\n            } else if (Number(newPos) == 90) {\n                alert('Winner is ' + activePlayerObj.name);\n                window.location.reload();\n            }\n\n            if (newPlayerPos[newPos]) {\n                let elimPlayerName = newPlayerPos[newPos][0];\n                newPlayers[getPlayerIndex(elimPlayerName)].pos = '';\n                isTogglePlayer = false;\n            }\n\n            if (ladders[newPos]) {\n                newPos = getPos(ladders[newPos]);\n            } else if (snakes[newPos]) {\n                newPos = getPos(snakes[newPos]);\n            }\n\n            newPlayerPos[newPos] = [activePlayerObj.name];\n\n            if (oldPos) {\n                delete newPlayerPos[oldPos];\n            }\n\n            if (diceVal == 6) {\n                isTogglePlayer = false;\n            }\n\n            activePlayerObj.pos = newPos;\n            isTogglePlayer && togglePlayer();\n            setPlayerPos(newPlayerPos);\n            setPlayers(newPlayers);\n        }, 300)\n    }\n\n    const togglePlayer = () => {\n        let numberOfPlayers = players.length;\n        if(numberOfPlayers == 1){\n            return;\n        }\n        if (activePlayer == numberOfPlayers - 1) {\n            setActivePlayer(0);\n        } else {\n            setActivePlayer(++activePlayer);\n        }\n    }\n\n    const getPlayerIndex = (name) => {\n        for (let i = 0; i < players.length; i++) {\n            if (players[i].name == name) {\n                return i;\n            }\n        }\n    }\n\n    const selectPlayerAndStart = (e) => {\n        let numOfPlayers = e.target.value;\n        let newPlayers = [];\n        for(let i = 1; i <= numOfPlayers; i++){\n            let playerInfo = {name: 'Player ' + i, pos: ''}\n            newPlayers.push(playerInfo);\n        }\n        setPlayers(newPlayers);\n        setStartGame(true);\n    }\n\n\n    return (\n        <>\n            <div className='game-container'>\n                <h2 className='heading'>Snakes & Ladders</h2>\n                <h4 className='heading'>Active Player: <span className={`player player-${activePlayer}`}>{players[activePlayer].name}</span></h4>\n                <div className='start-positions'>\n                    <h2 className='player-heading'>Players:</h2>\n                    {players.map((cur, index) => {\n                        return <div className='each-player'><div className='name'>{cur.name}</div><div className={`player-circle player-${index}`}></div></div>\n                    })}\n                </div>\n                <div className='board'>\n                    {initialGame.map((row, rowIndex) => {\n                        return <div className='row'>\n                            {row.map((col, colIndex) => {\n                                return <div className={`col ${initialGame[rowIndex][colIndex] % 2 == 0 ? 'even' : 'odd'}`}>\n                                    <div className='board-place'>{initialGame[rowIndex][colIndex]}</div>\n                                    {Object.keys(playerPos).map((cur) => {\n                                        if (cur == (rowIndex + '' + colIndex)) {\n                                            return <>\n                                                {playerPos[cur].map((eachPlayer, playerIndex) => {\n                                                    return <div className={`player player-${getPlayerIndex(eachPlayer)}`}></div>\n                                                })}\n                                            </>\n                                        }\n                                    })}\n                                </div>\n                            })}\n                        </div>\n                    })}\n                </div>\n                <div className='dice-holder'>\n                    <div className='dice' onClick={onDiceClick}>\n                        {isRolling ? <img src={DiceGif} className='dice-gif' /> :\n                            <div className='dice-value'>{diceVal}</div>}\n                    </div>\n                </div>\n            </div>\n            {!startGame ? <>\n                <div className='select-players'>\n                    <p>How Many Players?</p>\n                    <div>\n                        <input type=\"radio\" id=\"1\" name=\"players\" value=\"1\" onClick={selectPlayerAndStart} />\n                        <label for=\"male\">1</label><br />\n                    </div>\n                    <div>\n                        <input type=\"radio\" id=\"2\" name=\"players\" value=\"2\" onClick={selectPlayerAndStart} />\n                        <label for=\"female\">2</label><br />\n                    </div>\n                    <div>\n                        <input type=\"radio\" id=\"3\" name=\"players\" value=\"3\" onClick={selectPlayerAndStart} />\n                        <label for=\"other\">3</label><br />\n                    </div>\n                    <div>\n                        <input type=\"radio\" id=\"4\" name=\"players\" value=\"4\" onClick={selectPlayerAndStart} />\n                        <label for=\"other\">4</label>\n                    </div>\n                </div>\n                <div className='overlay'></div>\n            </> : null}\n        </>\n    )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}